<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model
	<annotation-driven />
    -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory  
	<resources mapping="/resources/**" location="/resources/" />
	-->

	<context:component-scan base-package="com.vitamin.*" />
	
	<!-- 정적 콘텐츠 : css, js, image 등 -->
	<!--  <mvc:resources mapping="/resources/**" location="/resources/" /> -->	
	<mvc:resources mapping="/css/**" location="/resources/css/" />
	<mvc:resources mapping="/js/**" location="/resources/js/" />
	<mvc:resources mapping="/font/**" location="/resources/font/" />
	<mvc:resources mapping="/images/**" location="/resources/images/" />
<!-- 
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
		<property name="order" value="1"/>
	</bean>
	
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/views/**/tiles.xml</value>
			</list>
		</property>
	</bean>
 -->	
	<mvc:annotation-driven />
	
	<!--
		로그아웃 처리 이후 뒤로가기를 하면 별다른 설정이 없었다면 계속해서 로그인 상태로 남아있을 것이다.
		이유는 브라우져가 캐쉬에 남아있는 정보를 그대로 읽어들여서 출력해주기 때문에 아직 로그인 한것처럼 보여지는 것이다.
		따라서 브라우져가 정보를 읽어들일때 캐쉬를 바라보지 않고 항상 최신의 상태로 읽어들여야 한다.
	  -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
				<property name="cacheSeconds" value="0"/>
                <property name="useExpiresHeader" value="true"/>
                <property name="useCacheControlHeader" value="true"/>
                <property name="useCacheControlNoStore" value="true"/>
                
                <!-- 다음과 같은 방법으로 특정 부분만 예외처리를 할 수 있다. -->
                <property name="cacheMappings">
                    <props>
                        <prop key="/css/**">86400</prop>
                        <prop key="/js/**">86400</prop>
                        <prop key="/font/**">86400</prop>
                        <prop key="/images/**">86400</prop>
                    </props>
                </property>			
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/resources/**" />
			<bean id="commonInterceptor" class="com.vitamin.single.interceptor.CommonInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
     
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
        <property name="order" value="4" />
        <property name="contentType" value="text/html; charset=UTF-8"/>
	</bean>
</beans>

